  if [ "$2" = '--help' ] || [ "$2" = '-h' ]; then
    cat "$git_issues_dir/docs/03_close.md" | "$git_issues_pager"
    exit 0
  fi

  user=$(git config 'user.name')
  if [ -z "$user" ]; then
    echo 'Could not find a git user name.' 1>&2
    echo '' 1>&2
    echo 'Did you set one with "git --config"?' 1>&2
    echo 'e.g. "git config --global user.name `Joe Smith`"'
    exit 1
  fi
  user_email=$(git config 'user.email')
  if [ -z "$user" ]; then
    echo 'Could not find a git user email address.' 1>&2
    echo '' 1>&2
    echo 'Did you set one with "git --config"?' 1>&2
    echo 'e.g. "git config --global user.email `joe.smith@example.com`"'
    exit 1
  fi

  # Try and match any hash
  hash_files=$(find "$git_dir/ISSUES/" -type f -name "$2-*.issue")
  file_list="$hash_files"
  # Hash didn't match, try titles:
  if [ -z "$hash_files" ]; then
    # Try and match any title
    title=$(echo "$2" | tr " " "-" | tr '[:upper:]' '[:lower:]')
    title_files=$(find "$git_dir/ISSUES/" -type f -name "*-$title*.issue")
    file_list="$title_files"
  fi
  # Remove empty lines
  file_list=$(echo "$file_list" | sed '/^$/d')

  # If we've only got one result, we can close it.
  if [ $(echo "$file_list" | wc -l) -eq 1 ] && [ -n "$file_list" ]; then
    echo '' >> "$file_list"
    # Add the closed message to the file.
    if [ -z "$3" ]; then
      echo 'CLOSED ISSUE.' >> "$file_list"
    else
      echo 'CLOSED ISSUE.' >> "$file_list"
      echo '' >> "$file_list"
      echo "$3" >> "$file_list"
    fi
    # Sign the file as the user
    echo '' >> "$file_list"
    echo '---' >> "$file_list"
    echo '' >> "$file_list"
    echo '-- Signed: ' "$user <$user_email>" >> "$file_list"
    # Add the .closed extension, and make sure git knows it exists
    mv "$file_list" "$file_list".closed
    git add "$file_list".closed
    # Extract our hash form the file name
    hash=$(basename $(echo "$file_list" | awk -F'-' '{print $1}'))
    # Commit.
    git commit -am "[ISSUE: CLOSED] #$hash ($title) by $user <$user_email>."
  else
    if [ -z "$file_list" ]; then
      # We got no results.
      echo 'Search found no open issues matching that description.' 1>&2
      echo '' 1>&2
      echo 'Are you sure it exists?' 1>&2
      exit 1
    else
      # We got ambiguous results. Let the user deal with it.
      echo 'Search matched multiple issues:' 1>&2
      echo "$file_list" 1>&2
      echo '' 1>&2
      echo 'git-issues cannot close it.' 1>&2
      echo 'Try searching by hash, or in the rare event of a hash clash, try renaming one of the files in question.' 1>&2
      exit 1
    fi
  fi