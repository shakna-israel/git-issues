#!/bin/sh

set -e

version='0.0.0'

# Readlink stuff needs to be in the main program,
# because it's how we find everything else.

# macos compatibility for readlink
# (The BSD readlink does not have the `-f` option)
if [ "$(uname)" = "Darwin" ]; then
  rlink='greadlink'
else
  rlink='readlink'
fi

# Crash if we can't use readlink...
if "$rlink" --help | grep -q 'readlink'; then
  :
else
  echo 'Could not access readlink.' 1>&2
  echo '' 1>&2
  echo 'Note: macOS users, you may need the GNU coreutils, try the homebrew or macports package managers.' 1>&2
  exit 1
fi

# Get our own directory, so we can access our docs and things.
git_issues_dir=$(dirname "$($rlink -f "$0")")

# Verify sets up git_dir, pager, and other things like that.
. "$git_issues_dir/src/git-issues-verify"

# TODO: Autoclose issues
# If a git commit is commented like:
# FIX: ISSUEHASH Comment
# Then autoclose it, and notify the user in a PAGER screen, so they see it.
# Maybe dialog/whiptail or read should be used to ask if we can autoclose it.

if [ -z "$1" ] || [ "$1" = 'help' ] || [ "$1" = '--help' ] || [ "$1" = '-h' ]; then
  # Only load help if we need it.
  . "$git_issues_dir/src/git-issues-help"
  help
fi

# Uninstall runs from a provided makefile!
if [ "$1" = 'uninstall' ]; then
  . "$git_issues_dir/src/git-issues-uninstall"
fi

if [ "$1" = 'tui' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi

if [ "$1" = 'add' ]; then
  . "$git_issues_dir/src/git-issues-add"
fi

if [ "$1" = 'close' ]; then
  . "$git_issues_dir/src/git-issues-close"
fi

if [ "$1" = 'reopen' ]; then
  . "$git_issues_dir/src/git-issues-reopen"
fi

if [ "$1" = 'tag' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi


if [ "$1" = 'comment' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi

if [ "$1" = 'log' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi

if [ "$1" = 'list' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi

if [ "$1" = 'graph' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi

if [ "$1" = 'rate' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi

if [ "$1" = 'sync' ]; then
  echo 'NOT YET IMPLEMENTED' 1>&2
  exit 1
fi

## If we have no issues, let's be kind and remove our garbage.
if [ -d "$git_dir/ISSUES" ]; then
  if [ ! "$(ls -A "$git_dir/ISSUES")" ]; then
    rm -rf "$git_dir/ISSUES"
  fi
fi